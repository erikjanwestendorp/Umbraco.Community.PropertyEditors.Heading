{"version":3,"file":"property-editor-ui-heading.element-w91sgKWz.js","sources":["../../Umbraco.Community.PropertyEditors.Heading.Client/TextboxHeading/src/property-editors/heading/property-editor-ui-heading.element.ts"],"sourcesContent":["import {\r\n  LitElement,\r\n  html,\r\n  customElement,\r\n  property,\r\n} from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport {\r\n  ManifestPropertyEditorUi,\r\n  UmbPropertyEditorUiElement,\r\n} from \"@umbraco-cms/backoffice/property-editor\";\r\nimport {\r\n  UUIInputEvent,\r\n} from \"@umbraco-cms/backoffice/external/uui\";\r\nimport { UmbChangeEvent } from \"@umbraco-cms/backoffice/event\";\r\nimport { type UmbPropertyEditorConfigCollection } from '@umbraco-cms/backoffice/property-editor';\r\n\r\ntype PropertyEditorValueType = {\r\n  text?: string;\r\n  size?: string;\r\n};\r\n\r\n@customElement(\"umb-community-property-editor-ui-heading\")\r\nexport class PropertyEditorUIHeadingElement\r\n  extends UmbElementMixin(LitElement)\r\n  implements UmbPropertyEditorUiElement\r\n{\r\n  private _sizeOptions: Array<{ value: string; name: string }> = [];\r\n\r\n  @property({ type: Object, attribute: false })\r\n  manifest?: ManifestPropertyEditorUi;\r\n\r\n  @property({ type: Object, attribute: false })\r\n  value?: PropertyEditorValueType;  \r\n\r\n  #setValueProperty(property: keyof PropertyEditorValueType, value: string) {\r\n    const newValue = { ...this.value }; \r\n    newValue[property] = value;\r\n    this.value = newValue;\r\n    this.dispatchEvent(new UmbChangeEvent());\r\n  }\r\n\r\n  @property({ attribute: false })\r\n  public set config(config: UmbPropertyEditorConfigCollection) {\r\n    const allowedHeadings = config.getValueByAlias(\"allowedHeadings\");\r\n\r\n    if (Array.isArray(allowedHeadings)) {\r\n      const filtered = allowedHeadings.filter((h) => typeof h === 'string' && h.trim() !== '');\r\n\r\n      this._sizeOptions = filtered.map((heading: string) => ({\r\n        value: heading,\r\n        name: heading,\r\n      }));\r\n\r\n      const currentSize = this.value?.size;\r\n      const isValid = this._sizeOptions.some(opt => opt.value === currentSize);\r\n\r\n      if (!isValid && this._sizeOptions.length > 0) {\r\n        const newValue = {\r\n          ...this.value,\r\n          size: this._sizeOptions[0].value\r\n        };\r\n        this.value = newValue;\r\n        this.dispatchEvent(new UmbChangeEvent());\r\n      }\r\n    } else {\r\n      this._sizeOptions = [];\r\n    }\r\n\r\n    this.requestUpdate();\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div style=\"display: flex; width: 100%;\">\r\n        <div style=\"width: 60px; margin-right: 2px;\">\r\n          <uui-select\r\n            value=${this.value?.size ?? \"\"}\r\n            style=\"width: 100%;\"\r\n            label=\"Select heading size\"\r\n            .options=${\r\n              this._sizeOptions.map((e) => ({\r\n                ...e,\r\n                selected: e.value == this.value?.size,\r\n              }))\r\n            }\r\n            @change=${(e: Event) => {\r\n              const target = e.target as HTMLSelectElement;\r\n              this.#setValueProperty(\"size\", target.value);\r\n            }}>\r\n          </uui-select>\r\n        </div>\r\n        <div style=\"flex: 1;\">\r\n          <uui-input\r\n            id=\"text\"\r\n            value=${this.value?.text ?? \"\"}\r\n            style=\"width: 100%;\"\r\n            label=\"Heading text\"            \r\n            @input=${(e: UUIInputEvent) =>\r\n              this.#setValueProperty(\"text\", e.target.value as string)}>\r\n          </uui-input>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\nexport default PropertyEditorUIHeadingElement;\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    \"umb-community-property-editor-ui-heading\": PropertyEditorUIHeadingElement;\r\n  }\r\n}"],"names":["_PropertyEditorUIHeadingElement_instances","setValueProperty_fn","PropertyEditorUIHeadingElement","UmbElementMixin","LitElement","__privateAdd","config","allowedHeadings","filtered","h","heading","currentSize","_a","opt","newValue","UmbChangeEvent","html","target","__privateMethod","_b","property","value","__decorateClass","customElement","PropertyEditorUIHeadingElement$1"],"mappings":";;;;;;;;;8OAAAA,GAAAC;AAuBO,IAAMC,IAAN,cACGC,EAAgBC,CAAU,EAEpC;AAAA,EAHO,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAL,CAAA,GAIL,KAAQ,eAAuD,CAAA;AAAA,EAAC;AAAA,EAgBhE,IAAW,OAAOM,GAA2C;;AAC3D,UAAMC,IAAkBD,EAAO,gBAAgB,iBAAiB;AAEhE,QAAI,MAAM,QAAQC,CAAe,GAAG;AAClC,YAAMC,IAAWD,EAAgB,OAAO,CAACE,MAAM,OAAOA,KAAM,YAAYA,EAAE,KAAA,MAAW,EAAE;AAEvF,WAAK,eAAeD,EAAS,IAAI,CAACE,OAAqB;AAAA,QACrD,OAAOA;AAAA,QACP,MAAMA;AAAA,MAAA,EACN;AAEF,YAAMC,KAAcC,IAAA,KAAK,UAAL,gBAAAA,EAAY;AAGhC,UAAI,CAFY,KAAK,aAAa,KAAK,CAAAC,MAAOA,EAAI,UAAUF,CAAW,KAEvD,KAAK,aAAa,SAAS,GAAG;AAC5C,cAAMG,IAAW;AAAA,UACf,GAAG,KAAK;AAAA,UACR,MAAM,KAAK,aAAa,CAAC,EAAE;AAAA,QAAA;AAE7B,aAAK,QAAQA,GACb,KAAK,cAAc,IAAIC,GAAgB;AAAA,MAAA;AAAA,IACzC;AAEA,WAAK,eAAe,CAAA;AAGtB,SAAK,cAAA;AAAA,EAAc;AAAA,EAGrB,SAAS;;AACP,WAAOC;AAAA;AAAA;AAAA;AAAA,sBAISJ,IAAA,KAAK,UAAL,gBAAAA,EAAY,SAAQ,EAAE;AAAA;AAAA;AAAA,uBAI5B,KAAK,aAAa,IAAI,CAAC,MAAA;;AAAO;AAAA,QAC5B,GAAG;AAAA,QACH,UAAU,EAAE,WAASA,IAAA,KAAK,UAAL,gBAAAA,EAAY;AAAA,MAAA;AAAA,KACjC,CACJ;AAAA,sBACU,CAAC,MAAa;AACtB,YAAMK,IAAS,EAAE;AACjB,MAAAC,EAAA,MAAKlB,GAAAC,CAAA,EAAL,KAAA,MAAuB,QAAQgB,EAAO,KAAA;AAAA,IAAA,CACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMOE,IAAA,KAAK,UAAL,gBAAAA,EAAY,SAAQ,EAAE;AAAA;AAAA;AAAA,qBAGrB,CAAC,MACRD,EAAA,MAAKlB,GAAAC,CAAA,EAAL,WAAuB,QAAQ,EAAE,OAAO,KAAA,CAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAMtE;AAlFOD,IAAA,oBAAA,QAAA;AAYLC,IAAiB,SAACmB,GAAyCC,GAAe;AACxE,QAAMP,IAAW,EAAE,GAAG,KAAK,MAAA;AAC3B,EAAAA,EAASM,CAAQ,IAAIC,GACrB,KAAK,QAAQP,GACb,KAAK,cAAc,IAAIC,GAAgB;AACzC;AAVAO,EAAA;AAAA,EADCF,EAAS,EAAE,MAAM,QAAQ,WAAW,IAAO;AAAA,GANjClB,EAOX,WAAA,YAAA,CAAA;AAGAoB,EAAA;AAAA,EADCF,EAAS,EAAE,MAAM,QAAQ,WAAW,IAAO;AAAA,GATjClB,EAUX,WAAA,SAAA,CAAA;AAUWoB,EAAA;AAAA,EADVF,EAAS,EAAE,WAAW,GAAA,CAAO;AAAA,GAnBnBlB,EAoBA,WAAA,UAAA,CAAA;AApBAA,IAANoB,EAAA;AAAA,EADNC,EAAc,0CAA0C;AAAA,GAC5CrB,CAAA;AAoFb,MAAAsB,IAAetB;"}